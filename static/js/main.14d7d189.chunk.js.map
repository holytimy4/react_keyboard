{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastPressedKey","handleKeyboardKey","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,eAAgB,MAFpB,EAaEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,eAAgBE,EAAME,OAd1C,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,qBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,qBAV/C,oBAiBE,WACE,IAAQD,EAAmBO,KAAKR,MAAxBC,eAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIT,EAAc,mCACkBA,EADlB,KAEV,kCA1BhB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.14d7d189.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  lastPressedKey: string | null;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    lastPressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyboardKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyboardKey);\n  }\n\n  handleKeyboardKey = (event: KeyboardEvent) => {\n    this.setState({ lastPressedKey: event.key });\n  };\n\n  render() {\n    const { lastPressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            lastPressedKey\n              ? `The last pressed key is [${lastPressedKey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}